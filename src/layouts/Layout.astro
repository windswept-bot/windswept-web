---
// Global styles
import '../styles/global.css';

// SEO Usage
import { SEO } from 'astro-seo';
import type { Props as SEOProps } from 'astro-seo';

const defaultSeo: SEOProps = {
  title: "Windswept",
  description: "Windswept is a Discord bot that makes managing your server easy through a focus on usability and aesthetics.",
  openGraph: {
    basic: {
      title: "Windswept Bot",
      type: "website",
      image: "/favicon.svg",
    }
  },
  extend: {
    link: [{ rel: "icon", href: "/favicon.svg" }],
    // You can add more default meta tags here if needed
  }
};

const { seo = {} } = Astro.props as { seo?: SEOProps };

// Get the current path and generate a page name
const pathname = Astro.url.pathname;
let pageName = "Home";
if (pathname !== "/") {
  // Remove leading/trailing slashes, split, capitalize
  pageName = pathname.replace(/\//g, " ").trim().replace(/\b\w/g, c => c.toUpperCase());
}

// If no title is provided, use the smart default
const smartTitle =
  seo.title ??
  (pageName === "Home" ? "Windswept" : `Windswept | ${pageName}`);

// Deep merge defaults with page-specific SEO
function mergeDeep(target: SEOProps, source: SEOProps): SEOProps {
  for (const key in source) {
    const t = target as any;
    const s = source as any;
    if (
      s[key] &&
      typeof s[key] === "object" &&
      !Array.isArray(s[key])
    ) {
      t[key] = mergeDeep(t[key] || {}, s[key]);
    } else {
      t[key] = s[key];
    }
  }
  return target;
}

const mergedSeo = mergeDeep(structuredClone(defaultSeo), { ...seo, title: smartTitle });
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<SEO {...mergedSeo} />
	</head>
	<body class="bg-blue-500 text-white font-balsamiq">
		<slot />
	</body>
</html>
